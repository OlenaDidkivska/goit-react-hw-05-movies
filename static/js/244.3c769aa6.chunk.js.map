{"version":3,"file":"static/js/244.3c769aa6.chunk.js","mappings":"8NAGaA,GAAaC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,mG,SCGVE,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,UACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAAC,KAAD,WACE,UAACV,EAAD,CAAYW,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAAhD,WACE,gBACES,IACEJ,GAAcK,EAAAA,EAAAA,IAAO,IAAKL,IAAeM,EAAAA,EAAAA,IAAW,IAAK,KAE3DC,IAAI,MAEN,wBAAKR,QARMD,EADL,KAejB,C,mJCxBYU,EAAOjB,EAAAA,GAAAA,KAAH,wFAOJkB,EAAmBlB,EAAAA,GAAAA,OAAH,yKAahBmB,EAAQnB,EAAAA,GAAAA,MAAH,8aAyBLoB,EAAYpB,EAAAA,GAAAA,EAAH,4E,gDCxChBqB,EAASC,EAAAA,KAEZC,MAAM,CACLC,MAAOF,EAAAA,KAEJG,IAAI,GAAI,8BACRC,YACAC,SAAS,gCAEbA,WAEUC,EAAa,SAAC,GAAsB,IAAD,EAAnBC,EAAmB,EAAnBA,aAC3B,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYX,KAJtBY,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAKf,OACE,UAAClB,EAAD,CAAMoB,SAAUH,GAAa,SAAAV,GAAK,OAAIK,EAAaL,EAAjB,IAAlC,WACE,SAACL,GAAD,gBAAOmB,KAAK,QAAWL,EAAS,UAAhC,IAA0CM,YAAY,oBACtD,SAACrB,EAAD,CAAkBoB,KAAK,SAAvB,UACE,SAAC,MAAD,CAAiBE,KAAK,YAExB,SAACpB,EAAD,oBAAYe,EAAOX,aAAnB,aAAY,EAAciB,YAG/B,E,uCCcD,EA3Ce,WAAO,IAAD,EACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOvC,EAAP,KAAewC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEhDC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAa,IAAIC,gBACjBC,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAaN,EAAY,IAAKG,EAAWI,QAFlD,OAERC,EAFQ,OAGmB,KAA7B,UAAAA,EAASC,eAAT,eAAkBC,QACpBd,EAAUY,EAASC,SAEnBE,MAAM,4CANM,gDASdC,QAAQC,IAAR,MATc,yDAAH,qDAaf,OADAR,IACO,WACLF,EAAWW,OACZ,CAlBA,CAmBF,GAAE,CAACd,IAOJ,OACE,gCACE,SAACnB,EAAD,CAAYC,aAPU,SAAC,GAAe,IAAbL,EAAY,EAAZA,MAE3BsB,EAD6B,KAAVtB,EAAe,CAAEA,MAAOA,GAAU,CAAC,EAEvD,KAKU,OAANrB,QAAM,IAANA,OAAA,EAAAA,EAAQsD,QAAS,IAAK,SAAC,IAAD,CAAWtD,OAAQA,MAG/C,C,kMC7CD2D,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAiB,mCAAG,WAAMV,GAAN,gGAENQ,EAAAA,GAAAA,IAAA,sCAAyCC,GAAO,CACrET,OAAAA,IAH2B,cAEvBC,EAFuB,yBAMtBA,EAASU,KAAKT,SANQ,oCAQzBM,EAAAA,GAAAA,SARyB,0CASpB,IAToB,cAWvB,IAAII,MAAJ,MAXuB,yDAAH,sDAejBb,EAAY,mCAAG,WAAO7B,EAAO2C,EAAMb,GAApB,gGAEDQ,EAAAA,GAAAA,IAAA,gCACIC,EADJ,iCACgCvC,EADhC,iBAC8C2C,EAD9C,wBAErB,CAAEb,OAAAA,IAJoB,cAElBC,EAFkB,yBAOjBA,EAASU,MAPQ,oCASpBH,EAAAA,GAAAA,SAToB,0CAUf,IAVe,cAYlB,IAAII,MAAJ,MAZkB,yDAAH,0DAgBZE,EAAe,mCAAG,WAAOC,EAASf,GAAhB,gGAEJQ,EAAAA,GAAAA,IAAA,iBACXO,EADW,oBACQN,EADR,mBAErB,CAAET,OAAAA,IAJuB,cAErBC,EAFqB,yBAOpBA,EAASU,MAPW,oCASvBH,EAAAA,GAAAA,SATuB,0CAUlB,IAVkB,cAYrB,IAAII,MAAJ,MAZqB,yDAAH,wDAgBfI,EAAe,mCAAG,WAAOD,EAASf,GAAhB,gGAEJQ,EAAAA,GAAAA,IAAA,iBACXO,EADW,4BACgBN,EADhB,mBAErB,CAAET,OAAAA,IAJuB,cAErBC,EAFqB,OAM3BI,QAAQC,IAAIL,EAASU,KAAKM,MANC,kBAOpBhB,EAASU,KAAKM,MAPM,oCASvBT,EAAAA,GAAAA,SATuB,0CAUlB,IAVkB,cAYrB,IAAII,MAAJ,MAZqB,yDAAH,wDAgBfM,EAAe,mCAAG,WAAOH,EAASF,EAAMb,GAAtB,gGAEJQ,EAAAA,GAAAA,IAAA,iBACXO,EADW,4BACgBN,EADhB,gCAC2CI,GAChE,CAAEb,OAAAA,IAJuB,cAErBC,EAFqB,yBAOpBA,EAASU,MAPW,oCASvBH,EAAAA,GAAAA,SATuB,0CAUlB,IAVkB,cAYrB,IAAII,MAAJ,MAZqB,yDAAH,yD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/api.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieTitle = styled(NavLink)`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Grid, GridItem } from 'components/App.styled';\nimport { blankPhoto, imgSrc } from 'components/SharedLayout';\nimport { useLocation } from 'react-router-dom';\nimport { MovieTitle } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Grid>\n      {movies.map(({ id, title, poster_path }) => (\n        <GridItem key={id}>\n          <MovieTitle to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={\n                poster_path ? imgSrc(200, poster_path) : blankPhoto(200, 300)\n              }\n              alt=\"\"\n            />\n            <h2>{title}</h2>\n          </MovieTitle>\n        </GridItem>\n      ))}\n    </Grid>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 350px;\n  margin: 20px auto;\n\n  position: relative;\n`;\n\nexport const SearchFormButton = styled.button`\n  width: 48px;\n  height: 48px;\n\n  font-size: 20px;\n  font-weight: bold;\n  color: #2a58b1;\n  position: absolute;\n\n  top: 0;\n  right: 0;\n`;\n\nexport const Field = styled.input`\n  width: 100%;\n  height: 28px;\n\n  border-style: none;\n  border-radius: 10px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.5);\n  background-color: transparent;\n\n  padding: 10px;\n  font-size: 18px;\n  outline: none;\n  letter-spacing: 0.06em;\n  font-weight: 200;\n\n  transition: all 0.5s ease-in-out;\n\n  cursor: pointer;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n  margin: 0;\n  text-align: center;\n`;\n","import { ErrorText, Field, Form, SearchFormButton } from './SearchForm.styled';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport PropTypes from 'prop-types';\n\nconst schema = yup\n  .object()\n  .shape({\n    query: yup\n      .string()\n      .max(30, 'Try making a shorter query')\n      .lowercase()\n      .required(\"You didn't enter anything!\"),\n  })\n  .required();\n\nexport const SearchForm = ({ onSubmitForm }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  return (\n    <Form onSubmit={handleSubmit(query => onSubmitForm(query))}>\n      <Field type=\"text\" {...register('query')} placeholder=\"Search movies\" />\n      <SearchFormButton type=\"submit\">\n        <AiOutlineSearch size=\"25px\" />\n      </SearchFormButton>\n      <ErrorText>{errors.query?.message}</ErrorText>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useState, useEffect } from 'react';\nimport { searchMovies } from 'services/api';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { MovieList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieTitle = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movieTitle) {\n      return;\n    }\n\n    const controller = new AbortController();\n    const fetchData = async () => {\n      try {\n        const response = await searchMovies(movieTitle, '1', controller.signal);\n        if (response.results?.length !== 0) {\n          setMovies(response.results);\n        } else {\n          alert('Sorry, there are no films with this word');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [movieTitle]);\n\n  const updateQueryString = ({ query }) => {\n    const nextParams = query !== '' ? { query: query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <section>\n      <SearchForm onSubmitForm={updateQueryString} />\n      {movies?.length > 0 && <MovieList movies={movies} />}\n    </section>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n// import { transformCountriesData, transformCountryData } from 'helpers';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'ce9ff11ff2b61f366eb027812f050c01';\n\nexport const getTrendingMovies = async signal => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`, {\n      signal,\n    });\n\n    return response.data.results;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const searchMovies = async (query, page, signal) => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`,\n      { signal }\n    );\n\n    return response.data;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${KEY}&language=en-US`,\n      { signal }\n    );\n\n    return response.data;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const getMovieCredits = async (movieId, signal) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`,\n      { signal }\n    );\n    console.log(response.data.cast);\n    return response.data.cast;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const getMovieReviews = async (movieId, page, signal) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=${page}`,\n      { signal }\n    );\n\n    return response.data;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n"],"names":["MovieTitle","styled","NavLink","MovieList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","imgSrc","blankPhoto","alt","Form","SearchFormButton","Field","ErrorText","schema","yup","shape","query","max","lowercase","required","SearchForm","onSubmitForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","type","placeholder","size","message","useState","setMovies","useSearchParams","searchParams","setSearchParams","movieTitle","get","useEffect","controller","AbortController","fetchData","searchMovies","signal","response","results","length","alert","console","log","abort","axios","KEY","getTrendingMovies","data","Error","page","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}