{"version":3,"file":"static/js/415.98e4fef7.chunk.js","mappings":"8NAGaA,GAAaC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,mG,SCGVE,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,UACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAAC,KAAD,WACE,UAACV,EAAD,CAAYW,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAAhD,WACE,gBACES,IACEJ,GAAcK,EAAAA,EAAAA,IAAO,IAAKL,IAAeM,EAAAA,EAAAA,IAAW,IAAK,KAE3DC,IAAI,MAEN,wBAAKR,QARMD,EADL,KAejB,C,8GCID,UA1Ba,WACX,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAkBH,EAAWI,QAFtC,OAERC,EAFQ,OAGdC,QAAQC,IAAIF,GACZP,EAAUO,GAJI,yGAAH,qDAQf,OADAH,IACO,WACLF,EAAWQ,OACZ,CACF,GAAE,KAGD,6BACE,2CACCzB,EAAO0B,OAAS,IAAK,SAAC,IAAD,CAAW1B,OAAQA,MAG9C,C,kMCzBD2B,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECR,EAAiB,mCAAG,WAAMC,GAAN,gGAENM,EAAAA,GAAAA,IAAA,sCAAyCC,GAAO,CACrEP,OAAAA,IAH2B,cAEvBC,EAFuB,yBAMtBA,EAASO,KAAKC,SANQ,oCAQzBH,EAAAA,GAAAA,SARyB,0CASpB,IAToB,cAWvB,IAAII,MAAJ,MAXuB,yDAAH,sDAejBC,EAAY,mCAAG,WAAOC,EAAOC,EAAMb,GAApB,gGAEDM,EAAAA,GAAAA,IAAA,gCACIC,EADJ,iCACgCK,EADhC,iBAC8CC,EAD9C,wBAErB,CAAEb,OAAAA,IAJoB,cAElBC,EAFkB,yBAOjBA,EAASO,MAPQ,oCASpBF,EAAAA,GAAAA,SAToB,0CAUf,IAVe,cAYlB,IAAII,MAAJ,MAZkB,yDAAH,0DAgBZI,EAAe,mCAAG,WAAOC,EAASf,GAAhB,gGAEJM,EAAAA,GAAAA,IAAA,iBACXS,EADW,oBACQR,EADR,mBAErB,CAAEP,OAAAA,IAJuB,cAErBC,EAFqB,yBAOpBA,EAASO,MAPW,oCASvBF,EAAAA,GAAAA,SATuB,0CAUlB,IAVkB,cAYrB,IAAII,MAAJ,MAZqB,yDAAH,wDAgBfM,EAAe,mCAAG,WAAOD,EAASf,GAAhB,gGAEJM,EAAAA,GAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,mBAErB,CAAEP,OAAAA,IAJuB,cAErBC,EAFqB,OAM3BC,QAAQC,IAAIF,EAASO,KAAKS,MANC,kBAOpBhB,EAASO,KAAKS,MAPM,oCASvBX,EAAAA,GAAAA,SATuB,0CAUlB,IAVkB,cAYrB,IAAII,MAAJ,MAZqB,yDAAH,wDAgBfQ,EAAe,mCAAG,WAAOH,EAASF,EAAMb,GAAtB,gGAEJM,EAAAA,GAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,gCAC2CM,GAChE,CAAEb,OAAAA,IAJuB,cAErBC,EAFqB,yBAOpBA,EAASO,MAPW,oCASvBF,EAAAA,GAAAA,SATuB,0CAUlB,IAVkB,cAYrB,IAAII,MAAJ,MAZqB,yDAAH,yD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/api.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieTitle = styled(NavLink)`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Grid, GridItem } from 'components/App.styled';\nimport { blankPhoto, imgSrc } from 'components/SharedLayout';\nimport { useLocation } from 'react-router-dom';\nimport { MovieTitle } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Grid>\n      {movies.map(({ id, title, poster_path }) => (\n        <GridItem key={id}>\n          <MovieTitle to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={\n                poster_path ? imgSrc(200, poster_path) : blankPhoto(200, 300)\n              }\n              alt=\"\"\n            />\n            <h2>{title}</h2>\n          </MovieTitle>\n        </GridItem>\n      ))}\n    </Grid>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { MovieList } from 'components/MoviesList/MoviesList';\nimport { getTrendingMovies } from 'services/api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchData = async () => {\n      try {\n        const response = await getTrendingMovies(controller.signal);\n        console.log(response);\n        setMovies(response);\n      } catch (error) {}\n    };\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n// import { transformCountriesData, transformCountryData } from 'helpers';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'ce9ff11ff2b61f366eb027812f050c01';\n\nexport const getTrendingMovies = async signal => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`, {\n      signal,\n    });\n\n    return response.data.results;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const searchMovies = async (query, page, signal) => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`,\n      { signal }\n    );\n\n    return response.data;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${KEY}&language=en-US`,\n      { signal }\n    );\n\n    return response.data;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const getMovieCredits = async (movieId, signal) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`,\n      { signal }\n    );\n    console.log(response.data.cast);\n    return response.data.cast;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const getMovieReviews = async (movieId, page, signal) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=${page}`,\n      { signal }\n    );\n\n    return response.data;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n"],"names":["MovieTitle","styled","NavLink","MovieList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","imgSrc","blankPhoto","alt","useState","setMovies","useEffect","controller","AbortController","fetchData","getTrendingMovies","signal","response","console","log","abort","length","axios","KEY","data","results","Error","searchMovies","query","page","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}