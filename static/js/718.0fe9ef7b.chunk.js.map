{"version":3,"file":"static/js/718.0fe9ef7b.chunk.js","mappings":"yOAEaA,E,QAAaC,GAAAA,GAAH,0G,SCCVC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,wBACGA,EAAQC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAACP,EAAD,YACE,wBAAKM,KACL,uBAAIC,MAFWF,EAKpB,KAGN,E,6BCsBD,EAjCgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOL,EAAP,KAAgBM,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAgBN,EAAS,IAAKG,EAAWI,QAFlD,OAERC,EAFQ,OAGdC,QAAQC,IAAIF,EAASG,SACjBH,EAASG,SACXZ,EAAWS,EAASG,SALR,yGAAH,qDAUf,OADAN,IACO,WACLF,EAAWS,OACZ,CACF,GAAE,CAACZ,KAGF,8BACsB,IAAnBP,EAAQoB,QACP,SAACrB,EAAD,CAAaC,QAASA,KAEtB,qEAIP,C,kMCjCDqB,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAiB,mCAAG,WAAMT,GAAN,gGAENO,EAAAA,GAAAA,IAAA,sCAAyCC,GAAO,CACrER,OAAAA,IAH2B,cAEvBC,EAFuB,yBAMtBA,EAASS,KAAKN,SANQ,oCAQzBG,EAAAA,GAAAA,SARyB,0CASpB,IAToB,cAWvB,IAAII,MAAJ,MAXuB,yDAAH,sDAejBC,EAAY,mCAAG,WAAOC,EAAOC,EAAMd,GAApB,gGAEDO,EAAAA,GAAAA,IAAA,gCACIC,EADJ,iCACgCK,EADhC,iBAC8CC,EAD9C,wBAErB,CAAEd,OAAAA,IAJoB,cAElBC,EAFkB,yBAOjBA,EAASS,MAPQ,oCASpBH,EAAAA,GAAAA,SAToB,0CAUf,IAVe,cAYlB,IAAII,MAAJ,MAZkB,yDAAH,0DAgBZI,EAAe,mCAAG,WAAOtB,EAASO,GAAhB,gGAEJO,EAAAA,GAAAA,IAAA,iBACXd,EADW,oBACQe,EADR,mBAErB,CAAER,OAAAA,IAJuB,cAErBC,EAFqB,yBAOpBA,EAASS,MAPW,oCASvBH,EAAAA,GAAAA,SATuB,0CAUlB,IAVkB,cAYrB,IAAII,MAAJ,MAZqB,yDAAH,wDAgBfK,EAAe,mCAAG,WAAOvB,EAASO,GAAhB,gGAEJO,EAAAA,GAAAA,IAAA,iBACXd,EADW,4BACgBe,EADhB,mBAErB,CAAER,OAAAA,IAJuB,cAErBC,EAFqB,OAM3BC,QAAQC,IAAIF,EAASS,KAAKO,MANC,kBAOpBhB,EAASS,KAAKO,MAPM,oCASvBV,EAAAA,GAAAA,SATuB,0CAUlB,IAVkB,cAYrB,IAAII,MAAJ,MAZqB,yDAAH,wDAgBfZ,EAAe,mCAAG,WAAON,EAASqB,EAAMd,GAAtB,gGAEJO,EAAAA,GAAAA,IAAA,iBACXd,EADW,4BACgBe,EADhB,gCAC2CM,GAChE,CAAEd,OAAAA,IAJuB,cAErBC,EAFqB,yBAOpBA,EAASS,MAPW,oCASvBH,EAAAA,GAAAA,SATuB,0CAUlB,IAVkB,cAYrB,IAAII,MAAJ,MAZqB,yDAAH,yD","sources":["components/ReviewsInfo/ReviewsInfo.styled.jsx","components/ReviewsInfo/ReviewsInfo.jsx","components/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewItem = styled.li`\n  box-shadow: 0px 0.1px 5px 1px #0b2336;\n  padding: 20px;\n  margin: 10px auto;\n`;\n","import { ReviewItem } from './ReviewsInfo.styled';\nimport PropTypes from 'prop-types';\n\nexport const ReviewsInfo = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <ReviewItem key={id}>\n            <h5>{author}</h5>\n            <p>{content}</p>\n          </ReviewItem>\n        );\n      })}\n    </ul>\n  );\n};\n\nReviewsInfo.propTypes = {\n  reviews: PropTypes.array.isRequired,\n};\n","import { ReviewsInfo } from 'components/ReviewsInfo/ReviewsInfo';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchData = async () => {\n      try {\n        const response = await getMovieReviews(movieId, '1', controller.signal);\n        console.log(response.results);\n        if (response.results) {\n          setReviews(response.results);\n        }\n      } catch (error) {}\n    };\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <ReviewsInfo reviews={reviews} />\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n// import { transformCountriesData, transformCountryData } from 'helpers';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'ce9ff11ff2b61f366eb027812f050c01';\n\nexport const getTrendingMovies = async signal => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`, {\n      signal,\n    });\n\n    return response.data.results;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const searchMovies = async (query, page, signal) => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`,\n      { signal }\n    );\n\n    return response.data;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${KEY}&language=en-US`,\n      { signal }\n    );\n\n    return response.data;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const getMovieCredits = async (movieId, signal) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`,\n      { signal }\n    );\n    console.log(response.data.cast);\n    return response.data.cast;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const getMovieReviews = async (movieId, page, signal) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=${page}`,\n      { signal }\n    );\n\n    return response.data;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n"],"names":["ReviewItem","styled","ReviewsInfo","reviews","map","id","author","content","useState","setReviews","movieId","useParams","useEffect","controller","AbortController","fetchData","getMovieReviews","signal","response","console","log","results","abort","length","axios","KEY","getTrendingMovies","data","Error","searchMovies","query","page","getMovieDetails","getMovieCredits","cast"],"sourceRoot":""}