{"version":3,"file":"static/js/884.11b92243.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport { getMovieDetails } from 'services/api';\nimport { AddInfo, Description, Details } from 'components/App.styled';\nimport { blankPhoto, imgSrc } from 'components/SharedLayout';\nimport { LinkWrapper, NavLinkStyled } from 'components/Header/Header.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const fromLocationRef = location.state?.from;\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchData = async () => {\n      try {\n        const response = await getMovieDetails(movieId, controller.signal);\n        console.log(response);\n        setMovie(response);\n      } catch (error) {}\n    };\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  const getGenres = () => {\n    return movie.genres?.map(genre => genre.name).join(', ') ?? null;\n  };\n\n  return (\n    <main>\n      <LinkWrapper>\n        <Link to={fromLocationRef}>Go back</Link>\n      </LinkWrapper>\n\n      <Details>\n        <img\n          src={\n            movie.poster_path\n              ? imgSrc(300, movie.poster_path)\n              : blankPhoto(300, 500)\n          }\n          alt=\"\"\n        />\n\n        <Description>\n          <h2>{movie.title}</h2>\n          <p>User score: {Math.round(movie.vote_average * 10)}%</p>\n          <section>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n          </section>\n          <section>\n            <h3>Genres</h3>\n            <p>{getGenres()}</p>\n          </section>\n        </Description>\n      </Details>\n\n      <AddInfo>\n        <h4>Additional information</h4>\n        <LinkWrapper>\n          <NavLinkStyled to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </NavLinkStyled>\n          <NavLinkStyled to=\"Reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </NavLinkStyled>\n        </LinkWrapper>\n      </AddInfo>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n// import { transformCountriesData, transformCountryData } from 'helpers';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'ce9ff11ff2b61f366eb027812f050c01';\n\nexport const getTrendingMovies = async signal => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`, {\n      signal,\n    });\n\n    return response.data.results;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const searchMovies = async (query, page, signal) => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`,\n      { signal }\n    );\n\n    return response.data;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${KEY}&language=en-US`,\n      { signal }\n    );\n\n    return response.data;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const getMovieCredits = async (movieId, signal) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`,\n      { signal }\n    );\n    console.log(response.data.cast);\n    return response.data.cast;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\nexport const getMovieReviews = async (movieId, page, signal) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=${page}`,\n      { signal }\n    );\n\n    return response.data;\n  } catch (error) {\n    if (axios.isCancel) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n"],"names":["useState","movie","setMovie","movieId","useParams","location","useLocation","fromLocationRef","state","from","backLinkHref","useEffect","controller","AbortController","fetchData","getMovieDetails","signal","response","console","log","abort","to","src","poster_path","imgSrc","blankPhoto","alt","title","Math","round","vote_average","overview","genres","map","genre","name","join","getGenres","Suspense","fallback","axios","KEY","getTrendingMovies","data","results","Error","searchMovies","query","page","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}